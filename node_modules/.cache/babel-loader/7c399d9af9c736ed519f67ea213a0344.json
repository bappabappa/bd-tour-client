{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useEffect, useState } from 'react';\nimport initializeAuthentication from \"../pages/Login/Firebase/firebse.init\";\ninitializeAuthentication();\n\nconst useFirebase = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const [isLoading, setIsLoading] = useState(true);\n  const auth = getAuth(); //sign in using google\n\n  const signInUsingGoogle = () => {\n    setIsLoading(true);\n    const googleProvider = new GoogleAuthProvider();\n    signInWithPopup(auth, googleProvider).then(resutlt => {\n      setUser(resutlt.user);\n    }).finally(() => setIsLoading(false));\n  }; // observe user state for better performace\n\n\n  useEffect(() => {\n    const unsubscribed = onAuthStateChanged(auth, user => {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser({});\n      }\n\n      setIsLoading(false);\n    });\n    return () => unsubscribed;\n  }, []); // logout \n\n  const logOut = () => {\n    setIsLoading(true);\n    signOut(auth).then(() => {}).finally(() => setIsLoading(false));\n  };\n\n  return {\n    user,\n    isLoading,\n    signInUsingGoogle,\n    logOut\n  };\n};\n\n_s(useFirebase, \"6hUK0E8YndCJdFKOGNBKQ9uTnV0=\");\n\nexport default useFirebase;","map":{"version":3,"sources":["C:/Milestone-11/Assignment-11/bd-tour-client/src/hooks/useFirebase.js"],"names":["getAuth","signInWithPopup","GoogleAuthProvider","signOut","onAuthStateChanged","useEffect","useState","initializeAuthentication","useFirebase","user","setUser","isLoading","setIsLoading","auth","signInUsingGoogle","googleProvider","then","resutlt","finally","unsubscribed","logOut"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,eAAlB,EAAmCC,kBAAnC,EAAuDC,OAAvD,EAAgEC,kBAAhE,QAA0F,eAA1F;AAEA,SAAUC,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,wBAAP,MAAqC,sCAArC;AAEAA,wBAAwB;;AAExB,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMO,IAAI,GAAGb,OAAO,EAApB,CAJsB,CAKtB;;AACA,QAAMc,iBAAiB,GAAG,MAAM;AAC5BF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMG,cAAc,GAAG,IAAIb,kBAAJ,EAAvB;AACAD,IAAAA,eAAe,CAACY,IAAD,EAAOE,cAAP,CAAf,CACKC,IADL,CACUC,OAAO,IAAI;AACbP,MAAAA,OAAO,CAACO,OAAO,CAACR,IAAT,CAAP;AACH,KAHL,EAIKS,OAJL,CAIa,MAAIN,YAAY,CAAC,KAAD,CAJ7B;AAKH,GARD,CANsB,CAgBtB;;;AACAP,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMc,YAAY,GAAGf,kBAAkB,CAACS,IAAD,EAAOJ,IAAI,IAAI;AAClD,UAAIA,IAAJ,EAAU;AACNC,QAAAA,OAAO,CAACD,IAAD,CAAP;AACH,OAFD,MAGK;AACDC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;;AACDE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KARsC,CAAvC;AASA,WAAO,MAAMO,YAAb;AACH,GAXQ,EAWN,EAXM,CAAT,CAjBsB,CA6BtB;;AACA,QAAMC,MAAM,GAAG,MAAM;AACjBR,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAT,IAAAA,OAAO,CAACU,IAAD,CAAP,CACKG,IADL,CACU,MAAM,CAAG,CADnB,EAEKE,OAFL,CAEa,MAAMN,YAAY,CAAC,KAAD,CAF/B;AAGH,GALD;;AAOA,SAAO;AACHH,IAAAA,IADG;AAEHE,IAAAA,SAFG;AAGHG,IAAAA,iBAHG;AAIHM,IAAAA;AAJG,GAAP;AAMH,CA3CD;;GAAMZ,W;;AA6CN,eAAeA,WAAf","sourcesContent":["import { getAuth, signInWithPopup, GoogleAuthProvider, signOut, onAuthStateChanged } from \"firebase/auth\";\n\nimport  { useEffect, useState } from 'react';\nimport initializeAuthentication from \"../pages/Login/Firebase/firebse.init\";\n\ninitializeAuthentication();\n\nconst useFirebase = () => {\n    const [user, setUser] = useState({});\n    const [isLoading, setIsLoading] = useState(true);\n\n    const auth = getAuth();\n    //sign in using google\n    const signInUsingGoogle = () => {\n        setIsLoading(true);\n        const googleProvider = new GoogleAuthProvider();\n        signInWithPopup(auth, googleProvider)\n            .then(resutlt => {\n                setUser(resutlt.user);\n            })\n            .finally(()=>setIsLoading(false));\n    }\n\n    // observe user state for better performace\n    useEffect(() => {\n        const unsubscribed = onAuthStateChanged(auth, user => {\n            if (user) {\n                setUser(user);\n            }\n            else {\n                setUser({})\n            }\n            setIsLoading(false);\n        });\n        return () => unsubscribed;\n    }, [])\n    // logout \n    const logOut = () => {\n        setIsLoading(true);\n        signOut(auth)\n            .then(() => { })\n            .finally(() => setIsLoading(false));\n    }\n\n    return {\n        user,\n        isLoading,\n        signInUsingGoogle,\n        logOut\n    }\n};\n\nexport default useFirebase;"]},"metadata":{},"sourceType":"module"}